e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
str_weights_list <- paste0( as.character( sapply( idxs, function(x) ((1+cc[x])/2) ) ), collapse=',' )
str_weights_list
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
all_times
weights
t_event
idxs
lapply( idxs, function(x) aLink( as.character(t_event), as.character(all_times[x]), weights[x]) )
weights
weights[1]
idxs
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
wavevec
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
links
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
lapply( idxs, function(x) aLink( as.character(t_event), as.character(all_times[x]), weights[x]) )
str_incident
append( str_incident, str_incident_list )
t_event
IDv(grph,t_event)
grrph
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
?attr
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
gib$insert(e7)
grph
plot(grph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
gib$insert(e7);
links
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e8)
plot(grph)
gib$insert(e9)
grph <- gib$export()
plot(grph)
igraph::get.vertex.attribute(grph,'incident',IDv(grph,'407'))
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e1);gib$insert(e2);gib$insert(e3);gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
gib$insert(e7);
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e8);gib$insert(e9)
e10 <- anEvent( 940, c(11,10,17) )
gib$insert(e10)
gib$flush()
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
rm(graphInsertBuffer())
rm(graphInsertBuffer
)
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
rm(graphInsertBuffer())
rm(graphInsertBuffer
)
library(topigraph)
library(dplyr)
install.packages('dplyr')
library(dplyr)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
rm(graphInsertBuffer)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
rm(graphInsertBuffer
)
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
library(topigraph)
library(topigraph)
