debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
conn
query <- paste0( "select clusterid from P where subject='a';")
rs <- dbGetQuery(conn,query)
rs
is.empty(rs)
is.null(rs)
nrow(rs)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
rs
is.na( rs$max_database )
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
max_graph
unlist( get.vertex.attribute(grph,name='membership',index=V(grph)) )
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
clusterids
sub_cliques_membership
clusterid
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
sub_cliques
sub_cliques_membership
as.numeric(names(sub_cliques_membership))==tCN
clusterid
grph_clique
clique_memberships
validids[ !is.na(clusterids) ]
validids[ !is.na(clique_memberships) ]
length( !is.na(clique_memberships))
length( which(!is.na(clique_memberships)) )
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
clusterid
?maxa
?max
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
rs
validids <- validids[ !is.na(clique_memberships) ]
validids
!is.na(clique_memberships)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
clique_memberships[validids]
sort(table(clique_memberships[validids],useNA="no"),decreasing=TRUE)[
)
sort(table(clique_memberships[validids],useNA="no"),decreasing=TRUE)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);gib$insert(e6)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7);gib$insert(e8)
gib$insert(e9)
grph <- gib$export()
plot(grph)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
?add.vertices
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
grph_ <- graph(edges=NULL,n=NULL,directed=FALSE) %>% add_vertices( 3, membership=NA )
grph_ <- graph(edges=NULL,n=NULL,directed=FALSE) %>% add_vertices( 3, membership=NA, name=seq(1,3) )
plot(grph_)
grph
grph_
get.vertex.attribute(grph_,'membership')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
source('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1)
gib$insert(e2)
gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4)
gib$insert(e5)
events
plot(grph_)
links
plot(grph_)
grph_
plot(grph)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
library(topigraph)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5)
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4)
gib$insert(e5)
plot(grph)
plot(sub_grph)
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
debugSource('~/Dropbox/Documents/Concepts/2020_08_10_topigraph/topigraph/Analysis/topigraph/R/graphInsertBuffer.R')
if ( file.exists('tmp.xml' ) ) {
file.remove( 'tmp.xml' )
}
conn <- topconnect::db("testProject")
query <- 'truncate P;'
rs <- DBI::dbGetQuery( conn, query )
parameters <- list(computationMask=c(1,2,3))
fields <- c("subject","UUID","channel","seizureUsed","time","waveform","clusterid","peak", "energy", "incident", "weights" )
dib <- topconnect::databaseInsertBuffer(conn,"P",fields,limit=2,updates=NULL)
state <- list(subject='bb8', session='02563349-e614-4a87-8d25-242496dcab8d', channel="A1", seizureUsed=1000 )
gib <- graphInsertBuffer( parameters, cw=200, cc=.8, ed=1.5, gf='tmp.xml', blackout=2, dib_=dib,state=state, conn=conn )
e1 <- anEvent( 121, c(7,10,9) )
e2 <- anEvent( 232, c(11,12,13) )
e3 <- anEvent( 243, c(11,12,14) )
gib$insert(e1);gib$insert(e2);gib$insert(e3)
e4 <- anEvent( 304, c(7,10,9) )
e5 <- anEvent( 365, c(11,12,11) )
e6 <- anEvent( 386, c(11,14,13) )
gib$insert(e4);gib$insert(e5);
gib$insert(e6)
grph
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e7)
e7 <- anEvent( 407, c(7,10,10) )
e8 <- anEvent( 468, c(11,11,13) )
e9 <- anEvent( 839, c(11,10,15) ) # Store/drop e1 & e2. Should activate database.
gib$insert(e8)
